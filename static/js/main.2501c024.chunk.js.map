{"version":3,"sources":["components/cityFilter.jsx","components/tableList.jsx","components/jumbotron.jsx","App.js","index.js"],"names":["Filter","props","id","list","placeholder","displayedList","results","map","person","idx","value","location","city","className","onClick","submitForm","reset","Table","useState","employees","setEmployees","sortOrder","setDisplayedList","useEffect","a","axios","get","res","data","fetchData","event","preventDefault","filteredList","el","document","getElementById","toLowerCase","filt","filter","length","style","display","el2","sortedEmployees","sort","b","name","first","reverse","classList","add","remove","last","email","phone","src","picture","thumbnail","alt","Jumbo","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.2501c024.chunk.js","sourcesContent":["function Filter(props) {\r\n    return (\r\n        <>\r\n        <h6 id=\"none\">No results</h6>\r\n            <input id=\"form\" list=\"cities\" placeholder=\"Filter by city\"></input>\r\n                <datalist id=\"cities\">\r\n                    {props.displayedList.results.map((person,idx) => {\r\n                        return (\r\n                                <option key={idx} value={person.location.city}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </datalist>\r\n            <div className=\"btns\">\r\n                <button onClick={props.submitForm}>Search</button>\r\n                <button onClick={props.reset}>Reset</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\nimport Filter from './cityFilter'\r\n\r\n\r\nfunction Table() {\r\n\r\n    const [employees, setEmployees] = useState([])\r\n    const [displayedList, setDisplayedList] = useState({\r\n        results: [],\r\n        sortOrder: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n        const res = await axios.get(\"https://randomuser.me/api/?results=30\")\r\n        setEmployees(res.data.results)\r\n        setDisplayedList({results: res.data.results})\r\n        }\r\n        fetchData()\r\n    },[] )\r\n\r\n    const sortByName = () => {\r\n  \r\n        var el = document.getElementById('here')\r\n        var el2 = document.getElementById('triangle')\r\n\r\n        const sortedEmployees = displayedList.results.sort((a, b) => {\r\n            if (b.name.first > a.name.first) {\r\n                return -1\r\n            }\r\n            if (a.name.first > b.name.first) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        if (displayedList.sortOrder === \"descend\") {\r\n            sortedEmployees.reverse()\r\n            setDisplayedList({ \r\n                results: sortedEmployees,\r\n                sortOrder: \"ascend\" \r\n            })\r\n            el.classList.add('sortClickPost')\r\n            el2.classList.add('triangle-up')\r\n            el2.classList.remove('triangle-down')\r\n        } else {\r\n            setDisplayedList({ \r\n                results: sortedEmployees,\r\n                sortOrder: \"descend\" \r\n            })\r\n            el.classList.add('sortClickPost')\r\n            el2.classList.add('triangle-down')\r\n            el2.classList.remove('triangle-up')\r\n        }\r\n    }\r\n\r\n    const submitForm = event => {\r\n        event.preventDefault()\r\n        let filteredList = employees;\r\n        var el = document.getElementById('none')\r\n\r\n        let data = document.getElementById('form').value.toLowerCase()\r\n        const filt = filteredList.filter(a => a.location.city.toLowerCase() === data)\r\n\r\n        if (filt.length > 0) {\r\n            if(displayedList.sortOrder === \"ascend\") {setDisplayedList({results: filt, sortOrder: \"ascend\"})}\r\n            else if (displayedList.sortOrder === \"descend\") {setDisplayedList({results: filt, sortOrder: \"descend\"})}\r\n            else {setDisplayedList({results: filt})}\r\n            el.style.display = 'none'\r\n        } else {\r\n            el.style.display = 'block'\r\n        }\r\n\r\n        document.getElementById('form').value = \"\"\r\n    }\r\n\r\n    const reset = event => {\r\n        event.preventDefault()\r\n        var el = document.getElementById('none')\r\n        el.style.display = 'none'\r\n        if(displayedList.sortOrder === \"ascend\") {setDisplayedList({results: employees, sortOrder: \"ascend\"})}\r\n        else if (displayedList.sortOrder === \"descend\") {setDisplayedList({results: employees, sortOrder: \"descend\"})}\r\n        else {setDisplayedList({results: employees})}\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Filter displayedList={displayedList}\r\n                submitForm={submitForm}\r\n                reset={reset} />\r\n\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th id=\"here\" onClick={sortByName}>Name <div id=\"triangle\"></div></th>\r\n                <th>Email</th>\r\n                <th>City</th>\r\n                <th>Phone number</th>\r\n                <th>Image</th>\r\n            </tr>\r\n            </thead>\r\n\r\n        {displayedList.results.map((person,idx) => { \r\n            return (\r\n                <tbody key={idx}>\r\n                <tr>\r\n                    <td>{person.name.first} {person.name.last}</td>\r\n                    <td>{person.email}</td>\r\n                    <td>{person.location.city}</td>\r\n                    <td>{person.phone}</td>\r\n                    <td><img src={person.picture.thumbnail} alt=\"Thumbnail\"/></td>\r\n                </tr>\r\n                </tbody>\r\n                )\r\n            })\r\n        }\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","function Jumbo() {\r\n    return (\r\n        <div className=\"jumbotron\">Employee directory</div>\r\n    )\r\n}\r\n\r\nexport default Jumbo","import './App.css';\nimport './components/styles.css'\nimport Table from './components/tableList'\nimport Jumbo from './components/jumbotron'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Jumbo/>\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}